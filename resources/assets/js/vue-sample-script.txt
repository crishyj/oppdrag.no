<script>
    export default{
        data(){
            return{
                successMessage : '',
                errorMessage : '',
                records : [],
                url : 'api/dashboard_reports',
                showNoRecordFound : false,
                search : '',
            }
        },
        mounted(){
            this.getList();
        },
        methods: {
            validateBeforeSubmit() {
                this.$validator.validateAll().then((result) => {
                    if (result) {
                        this.onSubmit();
                        this.errorMessage = '';
                        return;
                    }
                    this.errorMessage = this.errorBag.all()[0];
                });
            },
            onSubmit() {
                let self = this;
                let data = self.loginForm;
                self.loading = true;
                let url = self.url;
                self.$http.post(url, data).then(response => {
                    response = response.body;

                    self.successMessage = "You are successfully logged in. Please wait";
                    setTimeout(function () {
                        self.successMessage = '';
                        self.loading = false;
                    }, 2000);

                }).catch(error => {
                    var message = error.body.message;
                    var error = error.body.error;

                    if (error == 'invalid_credentials') {
                        message = 'Invalid email address or password';
                    }

                    setTimeout(function () {
                        self.$emit('error-message', "");
                    }, 2000);


                    this.$emit('error-message', message);
                    this.loading = false;
                });

            },
            getList(data , page){
                let self = this;
                self.noRecordFound = false;
                let url = self.url;

                if(typeof(page) == 'undefined' || !page){                        
                    self.records = [];
                }

                if((typeof(data) !== 'undefined' && data)){

                    var query  = '?pagination=true&keyword='+this.search.name+'&workspace_id='+this.search.workspace_id+'&status='+this.search.status;
                    url = 'user/search'+query;

                }else{

                    var query  = '?pagination=true';
                    url = url+query;
                }

                if(typeof(page) !== 'undefined' && page){
                    url += '&page='+page;   
                }

                self.$http.get(url).then(response=>{
                    response = response.data;

                    self.records = response.data;
                    self.pagination = response.pagination;

                    if (!self.records.length) {
                        self.showNoRecordFound = true;
                    }


                }).catch(error=>{
                    console.log(error , 'error in response');
                });
            },
        },            
    }
</script>